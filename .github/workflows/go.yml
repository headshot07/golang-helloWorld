name: helloWorld
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: golang_project
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      golang:
        image: golang:latest
#    container:
#      image: golang:1.18
    steps:
      - uses: actions/checkout@v3
#      - uses: golang-migrate/migrate@v4
#      - name: Install Golang-Migrate
#        run: brew install golang-migrate

#      - name: Build
#        run: go build -v ./...
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate
      - name: Build
        run: go build -v ./...
      - name: Run migrations
        run: make migrate-up
      - name: Test
        run: go test -v ./...

  create-vm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SECRET }}
          export_default_credentials: true
      - name: Use gcloud CLI
        run: gcloud info
      - name: Add SSH Key To Known Host
        run: mkdir ~/.ssh && cd ~/.ssh && echo {{secrets.SSH_PUBLIC}} > id_rsa.pub &&  echo {{secrets.SSH_PRIVATE}} > id_rsa
#        run: cd .ssh && echo {{secrets.SSH_PUBLIC}} > .ssh/id_rsa.pub && echo {{secrets.SSH_PRIVATE}} > .ssh/id_rsa
#      - name: Add SSH Key To Known Host
#        run: echo {{secrets.SSH_PUBLIC}} > .ssh/id_rsa.pub
#      - name: Add SSH Key To Known Host
#        run: echo {{secrets.SSH_PRIVATE}} > .ssh/id_rsa

      - name: Check Key
        run: cat .ssh/id_rsa
      - name: Show Ruby Version
        run: gcloud compute ssh 35.200.199.253 --command="sudo -v"
#      - name: Reload nginx
#        run: gcloud compute ssh 35.200.199.253 --command="ruby -v"
#      - name: Create Database
#        run: make create-database
#      - name: Setup Database
#        run: psql -h localhost -U postgres password=postgres -c 'CREATE DATABASE "postgres_dk";'
#
#      - name: Connect to database and create table
#        run: psql -h localhost -U postgres password=postgres -c 'CREATE TABLE users ( name varchar );'
